[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kube-mcp-server"
version = "1.0.0"
description = "FastAPI-based MCP server for Kubernetes cluster management through AI assistants"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Mithil Patel", email = "pmithil7@gmail.com"}
]
maintainers = [
    {name = "Mithil Patel", email = "pmithil7@gmail.com"}
]
keywords = ["kubernetes", "mcp", "fastapi", "ai", "claude", "devops"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "uvicorn>=0.34.0",
    "fastapi>=0.115.0",
    "fastapi-mcp>=0.4.0",
    "mcp>=1.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "types-requests>=2.28.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]

[project.urls]
"Homepage" = "https://github.com/pmithil7/kube-mcp-server"
"Bug Reports" = "https://github.com/pmithil7/kube-mcp-server/issues"
"Source" = "https://github.com/pmithil7/kube-mcp-server"
"Documentation" = "https://github.com/pmithil7/kube-mcp-server#readme"

[project.scripts]
kube-mcp-server = "kube_mcp_server.main:main"

# Black configuration
[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["kube_mcp_server"]
known_third_party = ["fastapi", "pydantic", "uvicorn", "mcp"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fastapi_mcp.*",
    "mcp.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=kube_mcp_server --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]
pythonpath = [
    "src"
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src/kube_mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Bandit security linter
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

# setuptools configuration
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"kube_mcp_server" = ["py.typed"]
